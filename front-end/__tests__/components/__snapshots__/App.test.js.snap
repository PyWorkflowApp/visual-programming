// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Validates App initialization Creates App 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="App container-fluid"
      >
        <div
          class="row"
        >
          <div
            class="col-md-12"
          >
            <h1>
              Visual Programming Workspace
            </h1>
          </div>
          <div>
            <span
              class="btn btn-link"
            >
              About
            </span>
          </div>
        </div>
        <hr />
        <div
          class="mb-3 row"
        >
          <div
            class="col-md-12"
          >
            <button
              class="btn btn-primary btn-sm"
              type="button"
            >
              Save
            </button>
             
            <input
              style="display: none;"
              type="file"
            />
            <button
              class="btn btn-primary btn-sm"
              type="button"
            >
              Load
            </button>
             
            <button
              class="btn btn-primary btn-sm"
              type="button"
            >
              Clear
            </button>
             
            <button
              class="btn btn-primary btn-sm"
              type="button"
            >
              Execute
            </button>
          </div>
        </div>
        <div
          class="Workspace row"
        >
          <div
            class="col-3"
          >
            <div
              class="GlobalFlowMenu"
            >
              <h3>
                Flow Variables
              </h3>
              <table
                class="table table-sm"
              >
                <thead>
                  <tr>
                    <th>
                      Name
                    </th>
                    <th>
                      Type
                    </th>
                    <th>
                      Value
                    </th>
                    <th />
                    <th />
                  </tr>
                </thead>
                <tbody />
              </table>
              <div
                class="dropdown btn-group"
                role="group"
              >
                <button
                  aria-expanded="false"
                  aria-haspopup="true"
                  class="dropdown-toggle dropdown-toggle-split btn btn-success btn-sm"
                  id="dropdown-split-basic"
                  type="button"
                >
                  Add Global Flow Variable 
                </button>
              </div>
            </div>
            <div
              class="NodeMenu"
            >
              <h3>
                Node Menu
              </h3>
              <div>
                Drag-and-drop nodes to build a workflow.
              </div>
              <hr />
              <input
                style="display: none;"
                type="file"
              />
              <button
                class="btn btn-success btn-sm"
                type="button"
              >
                Add Custom Node
              </button>
            </div>
          </div>
          <div
            class="col-9"
            style="padding-left: 0px;"
          >
            <div
              style="position: relative; flex-grow: 1;"
            >
              <div
                class="diagram-canvas css-18f0176"
              >
                <svg
                  class="css-12q0bj3"
                  style="transform: translate(
				0px,
				0px)
			scale(
				1
			);"
                />
                <div
                  class="css-12q0bj3"
                  style="transform: translate(
				0px,
				0px)
			scale(
				1
			);"
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="App container-fluid"
    >
      <div
        class="row"
      >
        <div
          class="col-md-12"
        >
          <h1>
            Visual Programming Workspace
          </h1>
        </div>
        <div>
          <span
            class="btn btn-link"
          >
            About
          </span>
        </div>
      </div>
      <hr />
      <div
        class="mb-3 row"
      >
        <div
          class="col-md-12"
        >
          <button
            class="btn btn-primary btn-sm"
            type="button"
          >
            Save
          </button>
           
          <input
            style="display: none;"
            type="file"
          />
          <button
            class="btn btn-primary btn-sm"
            type="button"
          >
            Load
          </button>
           
          <button
            class="btn btn-primary btn-sm"
            type="button"
          >
            Clear
          </button>
           
          <button
            class="btn btn-primary btn-sm"
            type="button"
          >
            Execute
          </button>
        </div>
      </div>
      <div
        class="Workspace row"
      >
        <div
          class="col-3"
        >
          <div
            class="GlobalFlowMenu"
          >
            <h3>
              Flow Variables
            </h3>
            <table
              class="table table-sm"
            >
              <thead>
                <tr>
                  <th>
                    Name
                  </th>
                  <th>
                    Type
                  </th>
                  <th>
                    Value
                  </th>
                  <th />
                  <th />
                </tr>
              </thead>
              <tbody />
            </table>
            <div
              class="dropdown btn-group"
              role="group"
            >
              <button
                aria-expanded="false"
                aria-haspopup="true"
                class="dropdown-toggle dropdown-toggle-split btn btn-success btn-sm"
                id="dropdown-split-basic"
                type="button"
              >
                Add Global Flow Variable 
              </button>
            </div>
          </div>
          <div
            class="NodeMenu"
          >
            <h3>
              Node Menu
            </h3>
            <div>
              Drag-and-drop nodes to build a workflow.
            </div>
            <hr />
            <input
              style="display: none;"
              type="file"
            />
            <button
              class="btn btn-success btn-sm"
              type="button"
            >
              Add Custom Node
            </button>
          </div>
        </div>
        <div
          class="col-9"
          style="padding-left: 0px;"
        >
          <div
            style="position: relative; flex-grow: 1;"
          >
            <div
              class="diagram-canvas css-18f0176"
            >
              <svg
                class="css-12q0bj3"
                style="transform: translate(
				0px,
				0px)
			scale(
				1
			);"
              />
              <div
                class="css-12q0bj3"
                style="transform: translate(
				0px,
				0px)
			scale(
				1
			);"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
